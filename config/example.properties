# STANDALONE = Starts MicroRTS as a standalone instance (No remote agents).
# GUI = Starts the microRTS GUI.
# SERVER = Starts MicroRTS as a server instance.
# CLIENT = Starts MicroRTS as a client instance.
launch_mode=STANDALONE

### NETWORKING ###
# Only needed if modes are SERVER/CLIENT
# server_address=127.0.0.1
# server_port=9898
# 1 = XML
# 2 = JSON
# serialization_type=2

# MAP
map_location=maps/8x8/basesWorkers8x8.xml

# number of training and test matches
train_matches = 100
test_matches = 10

#### GAME SETTINGS ###

# The max number of cycles per game
max_cycles=3000

# If false, the players have full vision of the map.
partially_observable=false

# Versions of the Unit Type Table (DEFAULT = 2)
# 1 = original
# 2 = original finetuned
# 3 = non-deterministic version of original finetuned (damages are random)
UTT_version=2

# Conflict policies (DEFAULT = 1)
# 1 = A conflict resolution policy where move conflicts cancel both moves
# 2 = A conflict resolution policy where move conflicts are solved randomly
# 3 = A conflict resolution policy where move conflicts are solved by alternating the units trying to move
conflict_policy=1

### STANDALONE Settings ###
# Only needed if mode is STANDALONE
# Set which AIs will play (not important, will be overridden programatically)
AI1=null
AI2=null

### Player parameters ###

# time budget to return an action, in milliseconds 
search.timebudget = 100

# the initial value and decay of exploration rate (epsilon is multiplied by this decay factor after each episode)
td.epsilon.initial = 0.1
#td.epsilon.decay = 1

# the initial value and decay of learning rate (alpha is multiplied by this decay factor after each episode)
td.alpha.initial = 0.01
#td.alpha.decay = 1

# Note: setting the decay rates to 1 makes the parameters constant throughout all episodes

# the discount factor
td.gamma = 1.0

# eligibility trace 
td.lambda = 0.1

### Specific settings for each player ###
# random seed (can be overridden programatically)
random.seed.p0 = 0
random.seed.p1 = 1 
